[{"F:\\NOOR\\Node Project\\React\\src\\index.js":"1","F:\\NOOR\\Node Project\\React\\src\\Signup.js":"2","F:\\NOOR\\Node Project\\React\\src\\Login.js":"3","F:\\NOOR\\Node Project\\React\\src\\ProtectedRoute.js":"4","F:\\NOOR\\Node Project\\React\\src\\About.jsx":"5","F:\\NOOR\\Node Project\\React\\src\\Table.jsx":"6","F:\\NOOR\\Node Project\\React\\src\\Add.jsx":"7","F:\\NOOR\\Node Project\\React\\src\\NotFound.jsx":"8","F:\\NOOR\\Node Project\\React\\src\\Edit.jsx":"9","F:\\NOOR\\Node Project\\React\\src\\View.jsx":"10","F:\\NOOR\\Node Project\\React\\src\\Auth.js":"11","F:\\NOOR\\Node Project\\React\\src\\Nav.jsx":"12"},{"size":1604,"mtime":1619954372113,"results":"13","hashOfConfig":"14"},{"size":6479,"mtime":1619954939459,"results":"15","hashOfConfig":"14"},{"size":5464,"mtime":1631123112902,"results":"16","hashOfConfig":"14"},{"size":693,"mtime":1619954339580,"results":"17","hashOfConfig":"14"},{"size":745,"mtime":1619175431791,"results":"18","hashOfConfig":"14"},{"size":2489,"mtime":1619807859121,"results":"19","hashOfConfig":"14"},{"size":1756,"mtime":1619176699256,"results":"20","hashOfConfig":"14"},{"size":175,"mtime":1619115256660,"results":"21","hashOfConfig":"14"},{"size":2439,"mtime":1631123371240,"results":"22","hashOfConfig":"14"},{"size":1365,"mtime":1619733943880,"results":"23","hashOfConfig":"14"},{"size":320,"mtime":1619808470432,"results":"24","hashOfConfig":"14"},{"size":1110,"mtime":1619954452901,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"26ij1a",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\NOOR\\Node Project\\React\\src\\index.js",[],["55","56"],"F:\\NOOR\\Node Project\\React\\src\\Signup.js",["57","58","59"],"import React from \"react\";\r\nimport { Form, Col, Row, Card, Button } from 'react-bootstrap';\r\nimport {\r\n    ValidationForm,\r\n    TextInput,\r\n    SelectGroup\r\n} from \"react-bootstrap4-form-validation\";\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Signup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            submitted: false,\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            gender: \"\"\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.props.getUsecaseDetails();\r\n\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ submitted: true });\r\n        const formData = {\r\n            name: this.state.name,\r\n            gender: this.state.gender,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        };\r\n        const requestOptions = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            },\r\n\r\n        }\r\n        axios.post(`${process.env.REACT_APP_BACKEND_URL}/addUser`, formData, requestOptions).then(\r\n            (result) => {\r\n                const { history } = this.props;\r\n                if (result.status == 200) {\r\n                    history.push('/login')\r\n                }\r\n                else {\r\n                    history.push('/signup')\r\n                }\r\n            }\r\n        )\r\n    };\r\n\r\n    render() {\r\n        const { } = this.props;\r\n        return (\r\n\r\n            <Card className=\"container mt-5\" style={{ margin: 'auto', width: '500px' }}>\r\n                <Card.Header>\r\n                    <Card.Title as=\"h5\">\r\n                        Signup Page\r\n                      </Card.Title>\r\n                    <p className=\"text-primary\">{this.state.message}</p>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <ValidationForm\r\n                        onSubmit={this.handleSubmit}\r\n                        onErrorSubmit={this.handleErrorSubmit}\r\n                    >\r\n                        <Form.Row >\r\n                            <Form.Group as={Col} md=\"8\" style={{ margin: 'auto' }}>\r\n                                <TextInput\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n                                    placeholder=\"Name \"\r\n                                    required\r\n                                    value={this.state.name}\r\n                                    errorMessage=\"Please Enter Name\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <br />\r\n\r\n                            <Form.Group as={Col} md=\"8\" style={{ margin: 'auto' }}>\r\n                                <TextInput\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    placeholder=\"Email \"\r\n                                    required\r\n                                    value={this.state.email}\r\n                                    errorMessage=\"Please Enter Email\"\r\n                                    onChange={this.handleChange}\r\n                                    autoComplete=\"off\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <br />\r\n                            <Form.Group as={Col} md=\"8\" style={{ margin: 'auto' }}>\r\n                                <TextInput\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    type=\"Password\"\r\n                                    placeholder=\"Password\"\r\n                                    required\r\n                                    value={this.state.password}\r\n                                    errorMessage=\"Please Enter Password\"\r\n                                    onChange={this.handleChange}\r\n                                    autoComplete=\"off\"\r\n                                />\r\n                            </Form.Group>\r\n                            <br />\r\n                            <Form.Group as={Col} md=\"8\" style={{ margin: 'auto' }}>\r\n                                <SelectGroup\r\n                                    name=\"gender\"\r\n                                    id=\"gender\"\r\n                                    type=\"Password\"\r\n                                    required\r\n                                    value={this.state.gender}\r\n                                    errorMessage=\"Please Select Gender\"\r\n                                    onChange={this.handleChange}\r\n\r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                    <option value=\"male\">Male</option>\r\n                                    <option value=\"female\">Female</option>\r\n                                </SelectGroup>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} className=\"mt-3 text-center\">\r\n                                {\" \"}\r\n                                <Button variant=\"success\" type=\"submit\" >\r\n                                    Sign Up\r\n                            </Button>{\" \"}\r\n                            </Form.Group>{\" \"}\r\n                            <Form.Group as={Col} className=\"mt-3 text-center\">\r\n                                {\" \"}\r\n                                    Log In <Link to='/login' style={{textDecoration:'none'}}>click here</Link>{\" \"}\r\n                            </Form.Group>{\" \"}\r\n                            <br />\r\n\r\n                            <Form.Group as={Col} md=\"12\">\r\n                                {alert.message && (\r\n                                    <div className={`alert ${alert.type}`}>\r\n                                        {alert.message + \" Please Click Reload Button.\"}\r\n                                    </div>\r\n                                )}\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </ValidationForm>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Signup;\r\n","F:\\NOOR\\Node Project\\React\\src\\Login.js",["60","61"],"import React from \"react\";\r\nimport { Form, Col, Row, Card, Button } from 'react-bootstrap';\r\nimport {\r\n    ValidationForm,\r\n    TextInput,\r\n\r\n} from \"react-bootstrap4-form-validation\";\r\nimport axios from \"axios\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            submitted: false,\r\n            email: \"\",\r\n            password: \"\"\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.props.getUsecaseDetails();\r\n\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ submitted: true });\r\n        const formData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        };\r\n        const requestOptions = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            },\r\n\r\n        }\r\n        axios.post(`${process.env.REACT_APP_BACKEND_URL}/login`, formData, requestOptions).then(\r\n\r\n            (result) => {\r\n                const { history } = this.props;\r\n                if (result.status == 200) {\r\n                        localStorage.setItem(\"user-auth\", JSON.stringify({ token: result.data.accessToken, auth: true }))\r\n                        history.push('/home');    \r\n                }\r\n                else {\r\n                    history.push('/login');\r\n                }\r\n            }\r\n        )\r\n    };\r\n\r\n    render() {\r\nconst {history } = this.props;\r\nconst user = JSON.parse(localStorage.getItem('user-auth'));\r\nif(user && user.token){\r\nhistory.push('/home');\r\njwt.verify(user.token,'hello',(error,decode)=>{\r\nif(error){\r\nlocalStorage.clear();\r\n}\r\nconsole.log(decode)\r\n})\r\n}\r\n\r\n        return (\r\n            \r\n                <Card className=\"container mt-5\" style={{margin:'auto',width:'500px'}}>\r\n                    <Card.Header>\r\n                        <Card.Title as=\"h5\">\r\n                            Login Page\r\n                      </Card.Title>\r\n                        {/* <p className=\"text-success\">{this.props.location && this.props.location.state}</p> */}\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <ValidationForm\r\n                            onSubmit={this.handleSubmit}\r\n                            onErrorSubmit={this.handleErrorSubmit}\r\n                        >\r\n                            <Form.Row >\r\n\r\n\r\n                                <Form.Group as={Col} md=\"8\" style={{ margin: 'auto' }}>\r\n                                    <TextInput\r\n                                        name=\"email\"\r\n                                        id=\"email\"\r\n                                        placeholder=\"Email \"\r\n                                        required\r\n                                        value={this.state.email}\r\n                                        errorMessage=\"Please Enter Email\"\r\n                                        onChange={this.handleChange}\r\n                                        autoComplete=\"off\"\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <br />\r\n                                <Form.Group as={Col} md=\"8\" style={{ margin: 'auto' }}>\r\n                                    <TextInput\r\n                                        name=\"password\"\r\n                                        id=\"password\"\r\n                                        type=\"Password\"\r\n                                        placeholder=\"Password\"\r\n                                        required\r\n                                        value={this.state.password}\r\n                                        errorMessage=\"Please Enter Password\"\r\n                                        onChange={this.handleChange}\r\n                                        autoComplete=\"off\"\r\n                                    />\r\n                                </Form.Group>\r\n\r\n\r\n                                <Form.Group as={Col} className=\"mt-3 text-center\">\r\n                                    {\" \"}\r\n                                    <Button variant=\"success\" type=\"submit\" >\r\n                                        Login\r\n                            </Button>{\" \"}\r\n                                </Form.Group>{\" \"}\r\n                                <Form.Group as={Col} className=\"mt-3 text-center\">\r\n                                    {\" \"}\r\n                                    Sign Up <Link to='/signup' style={{textDecoration:'none'}}>click here</Link>{\" \"}\r\n                                </Form.Group>{\" \"}\r\n                                <br />\r\n\r\n                                <Form.Group as={Col} md=\"12\">\r\n                                    {alert.message && (\r\n                                        <div className={`alert ${alert.type}`}>\r\n                                            {alert.message + \" Please Click Reload Button.\"}\r\n                                        </div>\r\n                                    )}\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </ValidationForm>\r\n                    </Card.Body>\r\n                </Card>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Login;\r\n","F:\\NOOR\\Node Project\\React\\src\\ProtectedRoute.js",[],"F:\\NOOR\\Node Project\\React\\src\\About.jsx",[],"F:\\NOOR\\Node Project\\React\\src\\Table.jsx",[],"F:\\NOOR\\Node Project\\React\\src\\Add.jsx",[],"F:\\NOOR\\Node Project\\React\\src\\NotFound.jsx",[],"F:\\NOOR\\Node Project\\React\\src\\Edit.jsx",["62"],"\r\nimport './App.css';\r\nimport React, { useState,useEffect } from 'react';\r\nimport { useHistory, useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction Edit() {\r\n  let history=useHistory();\r\n  const {id}=useParams();\r\n  const [myname,setMyname]=useState(\"\");\r\n  const [myemail,setMyemail]=useState(\"\");\r\n  const [myusername,setMyusername]=useState(\"\");\r\n  const myName = (event) => {\r\n    setMyname(event.target.value);\r\n    \r\n console.log(event.target.value);\r\n  };\r\n  const myEmail = (event) => {\r\n    setMyemail(event.target.value);\r\n  };\r\n  const myUsername = (event) => {\r\n    setMyusername(event.target.value);\r\n  };\r\n  const myData = async(event) => {\r\n    event.preventDefault();\r\n    setMyname(myname);\r\n    setMyemail(myemail);\r\n    setMyusername(myusername);\r\n    const user={\"name\":myname,\"email\":myemail,\"gender\":myusername};\r\n    await axios.put(`${process.env.REACT_APP_BACKEND_URL}/updateById/${id}`,user)\r\n    history.push(\"/\");\r\n  };\r\n  useEffect(()=>{\r\n      loadUser();\r\n  },[]);\r\n  const loadUser=async()=>{\r\nconst user = JSON.parse(localStorage.getItem('user-auth'))\r\n      const result=await axios.get(`${process.env.REACT_APP_BACKEND_URL}/fetchUser/${id}`,{headers:{'x-access-token':user.token}});\r\n      setMyname(result.data.data.name);\r\n      setMyemail(result.data.data.email);\r\n    setMyusername(result.data.data.gender);\r\n  };\r\n  return (\r\n    <>\r\n    <div className=\"container\"><br/>\r\n      <h1>Update Details</h1>\r\n       <form onSubmit={myData}>\r\n      <div className=\"form-floating mb-3\">\r\n        <input type=\"text\" className=\"form-control\" id=\"floatingInput\" onChange={e=>myName(e)} name=\"myname\" value={myname} />\r\n          <label for=\"floatingInput\">Name</label>\r\n        </div>\r\n        <div className=\"form-floating mb-3\">\r\n          <input type=\"email\" className=\"form-control\" id=\"floatingPassword\" onChange={myEmail} name=\"myemail\" value={myemail}/>\r\n            <label for=\"floatingPassword\">Email</label>\r\n          </div>\r\n          <div className=\"form-floating mb-3\">\r\n          <input type=\"text\" className=\"form-control\" id=\"floatingPassword\" onChange={myUsername} name=\"gender\" value={myusername}/>\r\n            <label for=\"floatingPassword\">Gender</label>\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"btn btn-primary mb-3\" >Update</button>\r\n          </form>\r\n        \r\n        </div>\r\n       \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Edit;\r\n","F:\\NOOR\\Node Project\\React\\src\\View.jsx",["63"],"\r\nimport './App.css';\r\nimport React,{useState,useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Aux from './Auth';\r\nfunction View() {\r\n    const {id}=useParams();\r\n\r\n    // const [users,setUser]=useState(\"\");\r\n\r\n    const [myname,setMyname]=useState(\"\");\r\n    const [myemail,setMyemail]=useState(\"\");\r\n    const [myusername,setMyusername]=useState(\"\");\r\n    useEffect(()=>{\r\n      loadUser();\r\n    },[]);\r\n    const loadUser=async()=>{\r\n      const result=await axios.get(`${process.env.REACT_APP_BACKEND_URL}/fetchUser/${id}`);\r\n      if(result.data && result.data.data){\r\n        setMyname(result.data.data.name);\r\n        setMyemail(result.data.data.email);\r\n        setMyusername(result.data.data.gender);\r\n      }\r\n\r\n    };\r\n  return (\r\n    <Aux>\r\n    <div className=\"container\">\r\n      <br/>\r\n      <h1>View Details</h1>\r\n      <hr/>\r\n   <table className=\" container table \">\r\n  <thead>\r\n    <tr>\r\n    <th scope=\"col\">ID</th>\r\n      <th scope=\"col\">Name</th>\r\n      <th scope=\"col\">Email</th>\r\n      <th scope=\"col\">Gender</th>\r\n      \r\n    </tr>\r\n  </thead>\r\n  <tbody>  \r\n        <tr>\r\n        <td>{id}</td>\r\n        <td>{myname}</td>\r\n        <td>{myemail}</td>\r\n        <td>{myusername}</td>\r\n       \r\n      </tr>\r\n  </tbody>\r\n</table>\r\n\r\n    </div>\r\n    </Aux>\r\n  );\r\n\r\n}\r\n\r\nexport default View;\r\n","F:\\NOOR\\Node Project\\React\\src\\Auth.js",[],"F:\\NOOR\\Node Project\\React\\src\\Nav.jsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":2,"column":21,"nodeType":"70","messageId":"71","endLine":2,"endColumn":24},{"ruleId":"72","severity":1,"message":"73","line":55,"column":35,"nodeType":"74","messageId":"75","endLine":55,"endColumn":37},{"ruleId":"76","severity":1,"message":"77","line":66,"column":15,"nodeType":"78","messageId":"75","endLine":66,"endColumn":18},{"ruleId":"68","severity":1,"message":"69","line":2,"column":21,"nodeType":"70","messageId":"71","endLine":2,"endColumn":24},{"ruleId":"72","severity":1,"message":"73","line":53,"column":35,"nodeType":"74","messageId":"75","endLine":53,"endColumn":37},{"ruleId":"79","severity":1,"message":"80","line":35,"column":5,"nodeType":"81","endLine":35,"endColumn":7,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"80","line":17,"column":7,"nodeType":"81","endLine":17,"endColumn":9,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["86"],["87"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"88","fix":"90"},"Update the dependencies array to be: [loadUser]",{"range":"91","text":"92"},{"range":"93","text":"92"},[1015,1017],"[loadUser]",[458,460]]